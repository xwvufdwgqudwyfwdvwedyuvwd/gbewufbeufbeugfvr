
loadstring(game:HttpGet("https://raw.githubusercontent.com/xwvufdwgqudwyfwdvwedyuvwd/gbewufbeufbeugfvr/refs/heads/main/fgrrrrhh5h5j%20000001%20Hunt"))()
loadstring(game:HttpGet("https://raw.githubusercontent.com/xwvufdwgqudwyfwdvwedyuvwd/gbewufbeufbeugfvr/refs/heads/main/Notify%20Nexa"))()

-- ======================================[ Hunt Teleport Script ]======================================

local Players = game:GetService("Players")
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local hrp = character:WaitForChild("HumanoidRootPart")

-- Variabel penyimpanan
local savePosition -- posisi awal sebelum teleport
local freezeBV, freezeBG
local selectedTargets = {} -- multi pilih
local isActive = false

-- Offset per event
local offsets = {
    ["Shark Hunt"] = Vector3.new(0, 100, 0),
    ["Worm Hunt"] = Vector3.new(0, 100, 0),
    ["Megalodon Hunt"] = Vector3.new(0, 5, 0),
    ["Ghost Shark Hunt"] = Vector3.new(0, 100, 0),
    ["Fishing Hunt"] = Vector3.new(0, 100, 0),
}

-- Target finder
local targets = {
    ["Shark Hunt"] = function()
        local menuRings = workspace:FindFirstChild("!!! MENU RINGS")
        local props = menuRings and menuRings:FindFirstChild("Props 1")
        return props and props:FindFirstChild("Shark Hunt")
    end,
    ["Worm Hunt"] = function()
        local menuRings = workspace:FindFirstChild("!!! MENU RINGS")
        local props = menuRings and menuRings:FindFirstChild("Props 2")
        return props and props:FindFirstChild("Model")
    end,
    ["Megalodon Hunt"] = function()
        local menuRings = workspace:FindFirstChild("!!! MENU RINGS")
        local props = menuRings and menuRings:FindFirstChild("Props 3")
        return props and props:FindFirstChild("Megalodon Hunt")
    end,
    ["Ghost Shark Hunt"] = function()
        local menuRings = workspace:FindFirstChild("!!! MENU RINGS")
        local props = menuRings and menuRings:FindFirstChild("Props 4")
        return props and props:FindFirstChild("Ghost Shark Hunt")
    end,
    ["Fishing Hunt"] = function()
        local menuRings = workspace:FindFirstChild("!!! MENU RINGS")
        local props = menuRings and menuRings:FindFirstChild("Props 5")
        return props and props:FindFirstChild("Fishing Hunt")
    end,
}

-- Freeze player
local function ApplyFreeze()
    if freezeBV then freezeBV:Destroy() end
    if freezeBG then freezeBG:Destroy() end

    freezeBV = Instance.new("BodyVelocity")
    freezeBV.Velocity = Vector3.new(0, 0, 0)
    freezeBV.MaxForce = Vector3.new(1e5, 1e5, 1e5)
    freezeBV.Parent = hrp

    freezeBG = Instance.new("BodyGyro")
    freezeBG.CFrame = hrp.CFrame
    freezeBG.D = 10
    freezeBG.MaxTorque = Vector3.new(1e5, 1e5, 1e5)
    freezeBG.Parent = hrp
end

local function RemoveFreeze()
    if freezeBV then freezeBV:Destroy() freezeBV = nil end
    if freezeBG then freezeBG:Destroy() freezeBG = nil end
end

-- Cari target aktif pertama dari selectedTargets
local function FindActiveTarget()
    for _, name in ipairs(selectedTargets) do
        local getTarget = targets[name]
        if getTarget then
            local model = getTarget()
            if model then
                return name, model
            end
        end
    end
    return nil, nil
end

-- Fungsi teleport loop
local function TeleportLoop()
    task.spawn(function()
        while isActive do
            local eventName, targetModel = FindActiveTarget()
            if eventName and targetModel then
                local offset = offsets[eventName] or Vector3.new(0, 10, 0)
                hrp.CFrame = targetModel:GetPivot() + offset
                ApplyFreeze()

                -- Tunggu sampai model hilang
                repeat
                    task.wait(1)
                until not isActive or not targets[eventName]() -- model hilang

                RemoveFreeze()
                if isActive and savePosition then
                    hrp.CFrame = savePosition -- kembali ke posisi awal
                end
            else
                task.wait(1) -- tunggu lagi sampai ada hunt aktif
            end
        end
    end)
end

-- Update ulang saat respawn
player.CharacterAdded:Connect(function(newChar)
    character = newChar
    hrp = character:WaitForChild("HumanoidRootPart")
    if isActive then
        task.delay(1, TeleportLoop)
    end
end)


-- ======================================[ Fishing Success & Fail Counter ]======================================

local Players = game:GetService("Players")
local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- UI Notif
local smallNotif = playerGui:WaitForChild("Small Notification")
local display = smallNotif:WaitForChild("Display")
local container = display:WaitForChild("Container")

local notifications = playerGui:WaitForChild("Text Notifications")
local notifFrame = notifications:WaitForChild("Frame")

local successPos = UDim2.new(0.5, 0, 0.100000001, 0)

-- Counter
local successCount = 0
local failCount = 0

-- Fungsi update label
local function updateLabel(successLabel, failLabel)
	successLabel.Text = "Success: " .. successCount
	failLabel.Text = "Failed: " .. failCount
end

-- Fungsi buat ScreenGui yang keren
local function createFishingGui()
	local screenGui = Instance.new("ScreenGui")
	screenGui.Name = "FishingCounterGui"
	screenGui.Parent = playerGui
	screenGui.ResetOnSpawn = false

	local frame = Instance.new("Frame")
	frame.Size = UDim2.new(0, 170, 0, 70)
	frame.Position = UDim2.new(0, 15, 0, 15)
	frame.BackgroundColor3 = Color3.fromRGB(20, 20, 25)
	frame.BackgroundTransparency = 0.15
	frame.BorderSizePixel = 0
	frame.Parent = screenGui

	-- Rounded corner
	local corner = Instance.new("UICorner")
	corner.CornerRadius = UDim.new(0, 12)
	corner.Parent = frame

	-- Gradient background
	local gradient = Instance.new("UIGradient")
	gradient.Color = ColorSequence.new({
		ColorSequenceKeypoint.new(0, Color3.fromRGB(50, 50, 60)),
		ColorSequenceKeypoint.new(1, Color3.fromRGB(15, 15, 20))
	})
	gradient.Rotation = 45
	gradient.Parent = frame

	-- UIStroke outline
	local stroke = Instance.new("UIStroke")
	stroke.Thickness = 1.5
	stroke.Color = Color3.fromRGB(120, 120, 255)
	stroke.Transparency = 0.3
	stroke.Parent = frame

	-- Title
	local title = Instance.new("TextLabel")
	title.Size = UDim2.new(1, 0, 0, 22)
	title.Position = UDim2.new(0, 0, 0, 0)
	title.BackgroundTransparency = 1
	title.Text = "🎣 Fishing Counter"
	title.Font = Enum.Font.GothamBold
	title.TextColor3 = Color3.fromRGB(200, 200, 255)
	title.TextSize = 15
	title.TextXAlignment = Enum.TextXAlignment.Center
	title.Parent = frame

	-- Success label
	local successLabel = Instance.new("TextLabel")
	successLabel.Size = UDim2.new(1, -10, 0, 20)
	successLabel.Position = UDim2.new(0, 5, 0, 28)
	successLabel.BackgroundTransparency = 1
	successLabel.TextColor3 = Color3.fromRGB(100, 255, 100)
	successLabel.Font = Enum.Font.GothamMedium
	successLabel.TextSize = 14
	successLabel.Text = "Success: 0"
	successLabel.TextXAlignment = Enum.TextXAlignment.Left
	successLabel.Parent = frame

	-- Failed label
	local failLabel = Instance.new("TextLabel")
	failLabel.Size = UDim2.new(1, -10, 0, 20)
	failLabel.Position = UDim2.new(0, 5, 0, 48)
	failLabel.BackgroundTransparency = 1
	failLabel.TextColor3 = Color3.fromRGB(255, 100, 100)
	failLabel.Font = Enum.Font.GothamMedium
	failLabel.TextSize = 14
	failLabel.Text = "Failed: 0"
	failLabel.TextXAlignment = Enum.TextXAlignment.Left
	failLabel.Parent = frame

	-- Success detection
	container:GetPropertyChangedSignal("Position"):Connect(function()
		if container.Position == successPos then
			successCount += 1
			updateLabel(successLabel, failLabel)
		end
	end)

	-- Fail detection
	notifFrame.ChildAdded:Connect(function(child)
		if child.Name == "TextTile" then
			local header = child:WaitForChild("Header", 5)
			if header and header:IsA("TextLabel") then
				if header.Text == "The fish got away!" then
					failCount += 1
					updateLabel(successLabel, failLabel)
				end
				header:GetPropertyChangedSignal("Text"):Connect(function()
					if header.Text == "The fish got away!" then
						failCount += 1
						updateLabel(successLabel, failLabel)
					end
				end)
			end
		end
	end)

	return screenGui
end

--========================================[ Auto Fish Script V2 ]======================================



local WindUI = loadstring(game:HttpGet("https://github.com/Footagesus/WindUI/releases/latest/download/main.lua"))()

-- Ambil nama player
local player = game.Players.LocalPlayer
local playerName = player.Name
local playerDisplayName = player.DisplayName

-- Buat Window
local Window = WindUI:CreateWindow({
    Title = "Nexa | Premium",
    Icon = "rbxassetid://131269662643486", -- lucide icon
    Author = "Fish IT! Script | @ Han",
    Folder = "Hanzo",

    -- Ukuran & tampilan
    Size = UDim2.fromOffset(650, 510),
    MinSize = Vector2.new(560, 350),
    MaxSize = Vector2.new(850, 560),

    Theme = "Dark", -- pakai tema dari versi pertama
    Transparent = true,
    Acrylic = false,
    HidePanelBackground = true,
    HideSearchBar = false,
    NewElements = true,
    Resizable = true,
    SideBarWidth = 200,
    BackgroundImageTransparency = 0.42,
    ScrollBarEnabled = true,

    -- Profil user di pojok kanan atas
    User = {
        Enabled = true,
        Anonymous = false,
        Name = playerDisplayName,
        UserName = "@" .. playerName,
        Callback = function()
            WindUI:Notify({
                Title = "User Profile",
                Content = "User profile clicked!",
                Duration = 3
            })
        end
    }
})

Window:Tag({
    Title = "v1.3.0",
    Color = Color3.fromHex("#30ff6a")
})


Window:EditOpenButton({
    Enabled = false
})

local Tabs = {
    Home = Window:Tab({ Title = "Home", Icon = "house"  }),
    Active = Window:Tab({ Title = "Active", Icon = "info"  }),
    Farm = Window:Tab({ Title = "Farm", Icon = "fish"  }),
    Event = Window:Tab({ Title = "Event", Icon = "calendar"  }),
    Auto = Window:Tab({ Title = "Automaticaly", Icon = "repeat-2"  }),
    Shop = Window:Tab({ Title = "Shop", Icon = "shopping-cart"  }),
    Boat = Window:Tab({ Title = "Boat", Icon = "sailboat"  }),
    Player = Window:Tab({ Title = "Player", Icon = "user"  }),
    Teleport = Window:Tab({ Title = "Teleport", Icon = "map-pin"  }),
    Server = Window:Tab({ Title = "Server", Icon = "server"  }),
}

Tabs.Home:Section({ Title = "Update", Icon = "logs" })

Tabs.Home:Section({
        Title = "Here's what's new:",
        TextSize = 24,
        FontWeight = Enum.FontWeight.SemiBold,
    })

Tabs.Home:Section({
        Title = [[
[+] Added Tab Event Halloween
 - Auto Claim All Reward
 - Auto TrickOrTreat
		]],
        TextSize = 18,
        TextTransparency = .35,
        FontWeight = Enum.FontWeight.Medium,
    })

Tabs.Home:Section({ Title = "Server" })

Tabs.Home:Paragraph({
    Title = "Nexa Hub",
    Image = "https://i.imgur.com/vl0g8IK.png",
    ImageSize = 42, -- default 30
    Thumbnail = "https://i.imgur.com/3m8FV2y.jpeg",
    ThumbnailSize = 120 -- Thumbnail height
})

Tabs.Home:Paragraph({
    Title = "Discord - Nexa | COMMUNITY",
    Desc = "Indonesia 🇮🇩",
    Image = "https://images-eds-ssl.xboxlive.com/image?url=4rt9.lXDC4H_93laV1_eHHFT949fUipzkiFOBH3fAiZZUCdYojwUyX2aTonS1aIwMrx6NUIsHfUHSLzjGJFxxsG72wAo9EWJR4yQWyJJaDaK1XdUso6cUMpI9hAdPUU_FNs11cY1X284vsHrnWtRw7oqRpN1m9YAg21d_aNKnIo-&format=source",
    ImageSize = 40,
    Color = "Grey",
    Buttons = {
        {
            Title = "Copy Link",
            Icon = "copy",
            Variant = "Tertiary",
            Callback = function()
                setclipboard("discord.gg/ECxQFc97F5")
                WindUI:Notify({
                    Title = "Copied!",
                    Content = "Discord link copied to clipboard",
                    Duration = 2
                })
            end
        }
    }
})

Tabs.Active:Section({ Title = "Info Event" })

-- === HUNT STATUS SECTION ===

-- Buat Section Title
Tabs.Active:Section({
    Title = "Hunt Status",
    TextSize = 24,
    FontWeight = Enum.FontWeight.SemiBold,
})

-- Buat Section untuk isi/status
local huntStatus = Tabs.Active:Section({
    Title = [[
Checking...
    ]],
    TextSize = 18,
    TextTransparency = .35,
    FontWeight = Enum.FontWeight.Medium,
})

-- daftar props & nama hunt
local hunts = {
    ["Props 1"] = "Shark Hunt",
    ["Props 2"] = "Model", -- Worm Hunt
    ["Props 3"] = "Megalodon Hunt",
    ["Props 4"] = "Ghost Shark Hunt",
    ["Props 5"] = "Fishing Hunt",
}

-- referensi ke menu rings
local menuRings = workspace:FindFirstChild("!!! MENU RINGS")

-- fungsi update status
local function updateStatus()
    if not menuRings then return end

    local statusText = ""

    for i = 1, 5 do
        local propName = "Props " .. i
        local huntName = hunts[propName]
        local prop = menuRings:FindFirstChild(propName)
        local found = false

        if prop and huntName then
            if prop:FindFirstChild(huntName) then
                found = true
            end
        end

        -- Worm Hunt khusus (Props 2 → "Model")
        if propName == "Props 2" then
            if prop and prop:FindFirstChild("Model") then
                found = true
            end
            statusText = statusText .. "Worm Hunt: " .. (found and "Spawned!" or "Not Found") .. "\n"
        else
            statusText = statusText .. hunts[propName] .. ": " .. (found and "Spawned!" or "Not Found") .. "\n"
        end
    end

    -- hapus newline terakhir
    statusText = statusText:sub(1, #statusText - 1)

    -- update teks di Section kedua
    huntStatus:SetTitle(statusText)
end

-- update awal
updateStatus()

-- auto update kalau ada perubahan di menuRings
if menuRings then
    menuRings.ChildAdded:Connect(function(child)
        if string.match(child.Name, "Props") then
            updateStatus()
        end
    end)

    menuRings.ChildRemoved:Connect(function(child)
        if string.match(child.Name, "Props") then
            updateStatus()
        end
    end)

    for i = 1, 5 do
        local prop = menuRings:FindFirstChild("Props " .. i)
        if prop then
            prop.ChildAdded:Connect(updateStatus)
            prop.ChildRemoved:Connect(updateStatus)
        end
    end
end

-- cek & update setiap 1 detik
task.spawn(function()
    while task.wait(1) do
        updateStatus()
    end
end)


Tabs.Active:Section({ Title = "Event Hunt" })

-- Dropdown multi pilihan event
Tabs.Active:Dropdown({
    Title = "Select Events",
    Values = {
        "Shark Hunt",
        "Worm Hunt",
        "Megalodon Hunt",
        "Ghost Shark Hunt",
        "Fishing Hunt",
    },
    Multi = true,
    AllowNone = true,
    Callback = function(options)
        selectedTargets = options
    end
})

-- Toggle Teleport
Tabs.Active:Toggle({
    Title = "Teleport To Events",
    Icon = "crosshair",
    Type = "Checkbox",
    Value = false,
    Callback = function(state)
        isActive = state
        if state then
            savePosition = hrp.CFrame -- simpan posisi awal saat toggle ON
            TeleportLoop()
        else
            RemoveFreeze()
            if savePosition then
                hrp.CFrame = savePosition
            end
        end
    end
})

Tabs.Farm:Section({ Title = "Fishing" })

-- Services
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")
local fishingGui = playerGui:WaitForChild("Fishing")
local mainFrame = fishingGui:WaitForChild("Main")
local vim = game:GetService("VirtualInputManager")
local camera = workspace.CurrentCamera

-- Default settings
local beforePosition = UDim2.new(0.5, 0, 1.5, 0)  -- posisi awal Main
local delayTime = 0.1  -- default delay klik (detik)
local toggleState = false  -- status toggle dari UI

-- ==========================
-- WindUI Input: Atur Delay Klik
-- ==========================
Tabs.Farm:Input({
    Title = "Set Click speed",
    Value = tostring(delayTime),
    Placeholder = "example: 0.001",
    Callback = function(input)
        local newDelay = tonumber(input)
        if newDelay and newDelay > 0 then
            delayTime = newDelay
        end
    end
})

-- ==========================
-- WindUI Toggle: Auto Fishing
-- ==========================
Tabs.Farm:Toggle({ 
    Title = "Auto Fish v1",
    Value = false,
    Callback = function(state)
        -- Simpan status toggle
        toggleState = state

        -- Kirim status Auto Fishing ke server
        local args = { state }
        game:GetService("ReplicatedStorage")
            :WaitForChild("Packages")
            :WaitForChild("_Index")
            :WaitForChild("sleitnick_net@0.2.0")
            :WaitForChild("net")
            :WaitForChild("RF/UpdateAutoFishingState")
            :InvokeServer(unpack(args))
    end
})

-- ==========================
-- Loop cek posisi Main & Auto Click ke UDim2 target
-- ==========================
task.spawn(function()
    while true do
        task.wait(delayTime)

        -- Hanya jalan kalau toggle aktif DAN posisi Main berubah
        if toggleState and mainFrame.Position ~= beforePosition then
            local screenSize = camera.ViewportSize

            -- target posisi {0.5, 0}, {0.5, 0} (tengah layar)
            local target = UDim2.new(0.5, 0, 0.5, 0)

            -- konversi ke pixel
            local targetX = (screenSize.X * target.X.Scale) + target.X.Offset
            local targetY = (screenSize.Y * target.Y.Scale) + target.Y.Offset

            vim:SendMouseButtonEvent(targetX, targetY, 0, true, game, 0)  -- down
            vim:SendMouseButtonEvent(targetX, targetY, 0, false, game, 0) -- up
        end
    end
end)


Tabs.Farm:Space()

local fishingGui
Tabs.Farm:Toggle({
	Title = "Fishing Counter Gui",
    Desc = "Shows How Many Times You Got Fish Or Failed To Get Fish",
	Value = false,
	Callback = function(state)
		if state then
			if not fishingGui then
				fishingGui = createFishingGui()
			end
			fishingGui.Enabled = true
		else
			if fishingGui then
				fishingGui.Enabled = false
			end
		end
	end
})

Tabs.Farm:Button({
    Title = "Cancel Fishing",
    Desc = "If there is a bug or stuck, click this to cancel and restart Fishv2 auto.",
    Callback = function()
        -- Panggil RemoteFunction CancelFishingInputs
        game:GetService("ReplicatedStorage")
            :WaitForChild("Packages")
            :WaitForChild("_Index")
            :WaitForChild("sleitnick_net@0.2.0")
            :WaitForChild("net")
            :WaitForChild("RF/CancelFishingInputs")
            :InvokeServer()

        -- Notifikasi
        WindUI:Notify({
            Title = "Fishing Cancelled",
            Content = "You can now restart Fishv2 Auto.",
            Duration = 5,
        })
    end
})

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")

-- Remote events
local Net = ReplicatedStorage:WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("sleitnick_net@0.2.0"):WaitForChild("net")
local EquipRemote = Net:WaitForChild("RE/EquipToolFromHotbar")
local UnequipRemote = Net:WaitForChild("RE/UnequipToolFromHotbar")

local equipLoop = nil

Tabs.Farm:Toggle({
    Title = "Auto Equip Rod",
    Desc = "Automatically equips your fishing rod in slot 1 and unequips it when turned off",
    Value = false,
    Callback = function(state)
        local char = workspace:WaitForChild("Characters"):WaitForChild(LocalPlayer.Name)

        if state then
            -- Mulai loop auto-equip
            equipLoop = task.spawn(function()
                while task.wait(1) do
                    -- Kalau masih ada !!!FISHING_VIEW_MODEL!!! berarti rod BELUM dipegang → equip
                    if char:FindFirstChild("!!!FISHING_VIEW_MODEL!!!") then
                        EquipRemote:FireServer(1)
                    end
                end
            end)
        else
            -- Hentikan loop
            if equipLoop then
                task.cancel(equipLoop)
                equipLoop = nil
            end

            -- Langsung unequip
            UnequipRemote:FireServer()
        end
    end
})


-- Variabel global
local savedCFrame = nil
local teleportEnabled = false

    local HighlightButton
    HighlightButton = Tabs.Farm:Button({
    Title = "Save Position", 
    Justify = "Center", -- align items in the center (Center or Between or Left or Right)
    IconAlign = "Left", -- Left or Right of the text
    Icon = "save", -- removing icon
    Callback = function() 
         HighlightButton:Highlight()
        local player = game.Players.LocalPlayer
        local hrp = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
        if hrp then
            savedCFrame = hrp.CFrame -- simpan CFrame lengkap (posisi + arah)
            WindUI:Notify({
                Title = "Saved",
                Content = "Posisi berhasil disimpan!",
                Duration = 5,
            })
        else
            WindUI:Notify({
                Title = "Error",
                Content = "Karakter belum siap!",
                Duration = 5,
            })
        end
    end
})

-- Fungsi Freeze dan kembalikan ke posisi
local function freezeCharacter()
    local player = game.Players.LocalPlayer
    local hrp = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
    if not hrp or not savedCFrame then return end

    -- BodyVelocity & BodyGyro
    local bv = Instance.new("BodyVelocity")
    bv.MaxForce = Vector3.new(1e5,1e5,1e5)
    bv.Velocity = Vector3.new(0,0,0)
    bv.Parent = hrp

    local bg = Instance.new("BodyGyro")
    bg.MaxTorque = Vector3.new(1e5,1e5,1e5)
    bg.CFrame = savedCFrame
    bg.Parent = hrp

    -- Loop freeze & check distance
    spawn(function()
        while teleportEnabled and hrp and hrp.Parent do
            local distance = (hrp.Position - savedCFrame.Position).Magnitude
            if distance > 2 then
                hrp.CFrame = savedCFrame
            end
            task.wait(0.1)
        end
        -- Hapus BV & BG saat toggle dimatikan
        if bv then bv:Destroy() end
        if bg then bg:Destroy() end
    end)
end

-- Toggle Teleport + Freeze
Tabs.Farm:Toggle({ 
    Title = "Teleport to Saved Position", 
    Icon = "map-pin-check",
    Type = "Checkbox",
    Value = false,
    Callback = function(state) 
        teleportEnabled = state
        if teleportEnabled then
            freezeCharacter()
        end
    end
})

Tabs.Farm:Section({ Title = "Sell" })

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local sellRemote = ReplicatedStorage:WaitForChild("Packages")
    :WaitForChild("_Index")
    :WaitForChild("sleitnick_net@0.2.0")
    :WaitForChild("net")
    :WaitForChild("RF/SellAllItems")

local autoSell = false
local sellDelay = 2 -- default delay
local mode = "Sell Delay" -- default mode

-- Slider untuk delay
Tabs.Farm:Slider({
    Title = "Sell Delay (seconds)",
    Step = 1,
    Value = {
        Min = 1,
        Max = 30,
        Default = 2,
    },
    Callback = function(value)
        sellDelay = value
    end
})

-- Dropdown untuk mode
Tabs.Farm:Dropdown({
    Title = "Select Mode",
    Values = { "Backpack Full", "Sell Delay" },
    Value = "Sell Delay",
    Callback = function(option)
        mode = option
    end
})

-- Toggle auto sell
Tabs.Farm:Toggle({
    Title = "Auto Sell All Items",
    Icon = "dollar-sign",
    Type = "Checkbox",
    Default = false,
    Callback = function(state)
        autoSell = state
        if autoSell then
            task.spawn(function()
                while autoSell do
                    pcall(function()
                        if mode == "Sell Delay" then
                            sellRemote:InvokeServer()
                            task.wait(sellDelay)
                        elseif mode == "Backpack Full" then
                            local bagLabel = LocalPlayer.PlayerGui.Inventory.Main.Top.Options.Fish.Label.BagSize
                            if bagLabel and bagLabel.Text == "5,000/5,000" then
                                sellRemote:InvokeServer()
                            end
                            task.wait(1)
                        end
                    end)
                end
            end)
        end
    end
})


Tabs.Event:Section({ Title = "Halloween" })

Tabs.Event:Toggle({
    Title = "Auto Claim All Reward",
    Icon = "lollipop",
    Type = "Checkbox",
    Value = false,
    Callback = function(state)
        getgenv().AutoClaimReward = state

        task.spawn(function()
            while getgenv().AutoClaimReward do
                for i = 1, 13 do
                    local args = {i}
                    pcall(function()
                        game:GetService("ReplicatedStorage")
                            :WaitForChild("Packages")
                            :WaitForChild("_Index")
                            :WaitForChild("sleitnick_net@0.2.0")
                            :WaitForChild("net")
                            :WaitForChild("RE/ClaimEventReward")
                            :FireServer(unpack(args))
                    end)
                    task.wait(0.1)
                end
                task.wait(1)
            end
        end)
    end
})

--// Reference ReplicatedStorage & Remote
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local SpecialDialogueEvent = ReplicatedStorage
    :WaitForChild("Packages")
    :WaitForChild("_Index")
    :WaitForChild("sleitnick_net@0.2.0")
    :WaitForChild("net")
    :WaitForChild("RF/SpecialDialogueEvent")

--// Auto TrickOrTreat Button
local HighlightButton
HighlightButton = Tabs.Event:Button({
    Title = "Auto TrickOrTreat",
    Icon = "candy",
    Callback = function()
        HighlightButton:Highlight()
        task.spawn(function()
            for _, npc in pairs(ReplicatedStorage:WaitForChild("NPC"):GetChildren()) do
                pcall(function()
                    SpecialDialogueEvent:InvokeServer(npc.Name, "TrickOrTreat")
                end)
                task.wait(0.01)
            end
        end)
    end
})

Tabs.Auto:Section({ Title = "View Quests" })

-- === DEEP SEA QUEST ===
local board = workspace["!!! MENU RINGS"]["Deep Sea Tracker"].Board
local surfaceGui = board:WaitForChild("Gui")
local content = surfaceGui:WaitForChild("Content")
local labelNames = {"Label1", "Label2", "Label3", "Label4"}

-- Section judul
Tabs.Auto:Section({
    Title = "Deep Sea Quest",
    TextSize = 24,
    FontWeight = Enum.FontWeight.SemiBold,
})

-- Section isi/status
local deepSeaSection = Tabs.Auto:Section({
    Title = [[
Checking...
    ]],
    TextSize = 18,
    TextTransparency = 0.35,
    FontWeight = Enum.FontWeight.Medium,
})

-- Fungsi update isi Section
local function updateDeepSea()
    local lines = {}
    for _, name in ipairs(labelNames) do
        local label = content:FindFirstChild(name)
        if label then
            table.insert(lines, label.Text)
        end
    end
    deepSeaSection:SetTitle(table.concat(lines, "\n"))
end

updateDeepSea()

for _, name in ipairs(labelNames) do
    local label = content:FindFirstChild(name)
    if label then
        label:GetPropertyChangedSignal("Text"):Connect(updateDeepSea)
    end
end

-- === AURA BOAT QUEST ===
Tabs.Auto:Section({
    Title = "Aura Boat Quest",
    TextSize = 24,
    FontWeight = Enum.FontWeight.SemiBold,
})

local auraSection = Tabs.Auto:Section({
    Title = [[
Checking...
    ]],
    TextSize = 18,
    TextTransparency = 0.35,
    FontWeight = Enum.FontWeight.Medium,
})

spawn(function()
    while true do
        local contentAura = workspace["!!! MENU RINGS"]["Aura Tracker"].Board.Gui.Content
        local combinedText = contentAura.Label1.Text .. "\n" .. contentAura.Label2.Text .. "\n" .. contentAura.Label3.Text
        auraSection:SetTitle(combinedText)
        wait(1)
    end
end)

-- === ELEMENT QUEST ===
local board = workspace["!!! MENU RINGS"]["Element Tracker"].Board
local surfaceGui = board:WaitForChild("Gui")
local content = surfaceGui:WaitForChild("Content")
local labelNames = {"Label1", "Label2", "Label3", "Label4"}

Tabs.Auto:Section({
    Title = "Element Quest",
    TextSize = 24,
    FontWeight = Enum.FontWeight.SemiBold,
})

local elementSection = Tabs.Auto:Section({
    Title = [[
Checking...
    ]],
    TextSize = 18,
    TextTransparency = 0.35,
    FontWeight = Enum.FontWeight.Medium,
})

local function updateElement()
    local lines = {}
    for _, name in ipairs(labelNames) do
        local label = content:FindFirstChild(name)
        if label then
            table.insert(lines, label.Text)
        end
    end
    elementSection:SetTitle(table.concat(lines, "\n"))
end

updateElement()

for _, name in ipairs(labelNames) do
    local label = content:FindFirstChild(name)
    if label then
        label:GetPropertyChangedSignal("Text"):Connect(updateElement)
    end
end

Tabs.Auto:Section({ Title = "Auto Quests" })

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer

-- Konfigurasi Quest
local Quests = {
    ["Deep Sea"] = {
        Label = workspace["!!! MENU RINGS"]["Deep Sea Tracker"].Board.Gui.Content:WaitForChild("Label1"),
        PosBelum100 = CFrame.new(-3563.65063, -279.074219, -1605.75671, 0.707868576, 1.15482976e-07, 0.706344128, -9.39126679e-08, 1, -6.93785722e-08, -0.706344128, -1.72237495e-08, 0.707868576),
        PosSudah100 = CFrame.new(-3698.01001, -135.073914, -1010.34033, -0.937130094, -7.4511493e-09, 0.348980278, -5.57951241e-09, 1, 6.36803633e-09, -0.348980278, 4.0207917e-09, -0.937130094)
    },
    ["Element"] = {
        Label = workspace["!!! MENU RINGS"]["Element Tracker"].Board.Gui.Content:WaitForChild("Label2"),
        PosBelum100 = CFrame.new(1482.32007, 11.143092, -302.042816, 0.885536253, 1.44529979e-08, -0.464570314, 3.34035661e-08, 1, 9.478238e-08, 0.464570314, -9.941519e-08, 0.885536253),
        PosSudah100 = CFrame.new(1524.70227, 5.12503767, -634.379639, 0.186757445, 3.27716378e-08, -0.98240608, -6.09756299e-08, 1, -4.49504144e-08, 0.98240608, 6.82976022e-08, 0.186757445)
    },
    ["Aura Boat"] = {
        PosTarget = CFrame.new(88.2434769, 9.53157043, 2685.2605, 0.999735832, -1.020575e-08, 0.0228940968, 1.1017133e-08, 1, 3.51753293e-08, -0.0228940968, 3.54192586e-08, 0.999735832),
        MinLevel = 200
    }
}

local selectedQuest = "Deep Sea"
local autoQuestEnabled = false
local freezeBV, freezeBG
local savedCFrame

-- Freeze / Unfreeze
local function Freeze(char, cf)
    local hrp = char:FindFirstChild("HumanoidRootPart")
    if not hrp then return end

    if freezeBV then freezeBV:Destroy() freezeBV = nil end
    if freezeBG then freezeBG:Destroy() freezeBG = nil end

    freezeBV = Instance.new("BodyVelocity")
    freezeBV.Velocity = Vector3.zero
    freezeBV.MaxForce = Vector3.new(9e9, 9e9, 9e9)
    freezeBV.Parent = hrp

    freezeBG = Instance.new("BodyGyro")
    freezeBG.MaxTorque = Vector3.new(9e9, 9e9, 9e9)
    freezeBG.CFrame = cf or hrp.CFrame
    freezeBG.Parent = hrp
end

local function Unfreeze()
    if freezeBV then freezeBV:Destroy() freezeBV = nil end
    if freezeBG then freezeBG:Destroy() freezeBG = nil end
end

-- Teleport utama
local function TeleportOnce(cf)
    local char = LocalPlayer.Character
    if char and char:FindFirstChild("HumanoidRootPart") then
        char:SetPrimaryPartCFrame(cf)
        savedCFrame = cf
        Freeze(char, cf)
    end
end

-- Cek quest
local function CheckQuest()
    if not autoQuestEnabled or not selectedQuest then return end

    local char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    local hrp = char:WaitForChild("HumanoidRootPart")

    if selectedQuest == "Aura Boat" then
        local overhead = hrp:WaitForChild("Overhead")
        local levelLabel = overhead:WaitForChild("LevelContainer"):WaitForChild("Label")
        local level = tonumber(levelLabel.Text:match("%d+")) or 0
        if level >= Quests["Aura Boat"].MinLevel then
            TeleportOnce(Quests["Aura Boat"].PosTarget)
        end
    else
        local quest = Quests[selectedQuest]
        local text = quest.Label.Text
        local persen = tonumber(text:match("(%d+)%%"))
        if persen and persen < 100 then
            TeleportOnce(quest.PosBelum100)
        else
            TeleportOnce(quest.PosSudah100)
        end
    end
end

-- Sinyal update label (Deep Sea / Element)
for name, quest in pairs(Quests) do
    if quest.Label then
        quest.Label:GetPropertyChangedSignal("Text"):Connect(function()
            if selectedQuest == name and autoQuestEnabled then
                CheckQuest()
            end
        end)
    end
end

-- Anti geser
RunService.Heartbeat:Connect(function()
    if autoQuestEnabled and savedCFrame then
        local char = LocalPlayer.Character
        if char and char:FindFirstChild("HumanoidRootPart") then
            local hrp = char.HumanoidRootPart
            if (hrp.Position - savedCFrame.Position).Magnitude > 2 then
                hrp.CFrame = savedCFrame
            end
        end
    end
end)

-- Dropdown gabungan
Tabs.Auto:Dropdown({
    Title = "Select Quest",
    Values = { "Deep Sea", "Element", "Aura Boat" },
    Value = selectedQuest,
    Callback = function(option)
        selectedQuest = option
        print("Selected Quest: " .. option)
        if autoQuestEnabled then
            CheckQuest()
        end
    end
})

-- Toggle auto quest
Tabs.Auto:Toggle({
    Title = "Auto Quest",
    Desc = "Teleport otomatis sesuai progress quest yang dipilih",
    Icon = "circle-plus",
    Type = "Checkbox",
    Value = false,
    Callback = function(state)
        autoQuestEnabled = state
        if state then
            CheckQuest()
        else
            Unfreeze()
            savedCFrame = nil
        end
    end
})

Tabs.Shop:Section({ Title = "Rod" })

-- Table mapping nama rod ke ID
local rodMap = {
	["Starter Rod"] = 1,
	["Luck Rod"] = 79,
	["Carbon Rod"] = 76,
	["Grass Rod"] = 85,
	["Demascus Rod"] = 77,
	["Ice Rod"] = 78,
	["Lucky Rod"] = 4,
	["Midnight Rod"] = 80,
	["Steampunk Rod"] = 6,
	["Chrome Rod"] = 7,
	["Fluorescent Rod"] = 255,
	["Astral Rod"] = 5,
	["Angler Rod"] = 168,
	["Ares Rod"] = 126,
	["Bamboo Rod"] = 258,
}

local selectedRods = {}

-- Ambil semua nama rod dari rodMap sebagai Values dropdown
local rodNames = {}
for name, _ in pairs(rodMap) do
	table.insert(rodNames, name)
end

-- Dropdown multi-select dengan nama rod otomatis
Tabs.Shop:Dropdown({ 
    Title = "Select Rods",
    Values = rodNames,
    Default = {},
    Multi = true,
    Callback = function(values)
        selectedRods = {}
        for _, name in ipairs(values) do
            table.insert(selectedRods, rodMap[name])
        end
    end
})

    local HighlightButton
    HighlightButton = Tabs.Shop:Button({
    Title = "Purchase Rods",
    Justify = "Center", -- align items in the center (Center or Between or Left or Right)
    IconAlign = "Left", -- Left or Right of the text
    Icon = "", -- removing icon
    Callback = function()
         HighlightButton:Highlight()
        if #selectedRods == 0 then return end

        local remote = game:GetService("ReplicatedStorage")
            :WaitForChild("Packages")
            :WaitForChild("_Index")
            :WaitForChild("sleitnick_net@0.2.0")
            :WaitForChild("net")
            :WaitForChild("RF/PurchaseFishingRod")

        for _, id in ipairs(selectedRods) do
            pcall(function()
                remote:InvokeServer(id)
            end)
        end
    end
})

Tabs.Shop:Section({ Title = "Baits" })

-- Table mapping nama bait ke ID
local BaitID = {
    ["Topwater Bait"] = 10,
    ["Luck Bait"] = 2,
    ["Midnight Bait"] = 3,
    ["Nature Bait"] = 17,
    ["Chroma Bait"] = 6,
    ["Dark Matter Bait"] = 8,
    ["Corrupt Bait"] = 15,
    ["Aether Bait"] = 16,
    ["Floral Bait"] = 20,
}

local selectedBaits = {}

-- Ambil semua nama bait dari BaitID sebagai Values dropdown
local baitNames = {}
for name, _ in pairs(BaitID) do
    table.insert(baitNames, name)
end

-- Dropdown multi-select untuk memilih bait
Tabs.Shop:Dropdown({
    Title = "Select Baits",
    Values = baitNames,
    Default = {},
    Multi = true,
    Callback = function(values)
        selectedBaits = {}
        for _, name in ipairs(values) do
            table.insert(selectedBaits, BaitID[name])
        end
        print("Selected Bait IDs:", unpack(selectedBaits))
    end
})

    local HighlightButton
    HighlightButton = Tabs.Shop:Button({
    Title = "Purchase Selected Baits",
    Justify = "Center", -- align items in the center (Center or Between or Left or Right)
    IconAlign = "Left", -- Left or Right of the text
    Icon = "", -- removing icon
    Callback = function()
      HighlightButton:Highlight()
        if #selectedBaits == 0 then
            return
        end

        local remote = game:GetService("ReplicatedStorage")
            :WaitForChild("Packages")
            :WaitForChild("_Index")
            :WaitForChild("sleitnick_net@0.2.0")
            :WaitForChild("net")
            :WaitForChild("RF/PurchaseBait")

        for _, id in ipairs(selectedBaits) do
            print("Attempting to purchase bait ID:", id)
            local success, err = pcall(function()
                remote:InvokeServer(id)
            end)
            if success then
                print("Successfully purchased bait ID:", id)
            else
                warn("Failed to purchase bait ID", id, "Error:", err)
            end
        end
    end
})

Tabs.Shop:Section({ Title = "Weather" })

local ReplicatedStorage = game:GetService("ReplicatedStorage")

local PurchaseWeather = ReplicatedStorage
    :WaitForChild("Packages")
    :WaitForChild("_Index")
    :WaitForChild("sleitnick_net@0.2.0")
    :WaitForChild("net")
    :WaitForChild("RF/PurchaseWeatherEvent")

-- simpan pilihan sementara (table untuk multi)
local selectedWeathers = {}

-- Dropdown buat pilih weather
Tabs.Shop:Dropdown({
    Title = "Select Weather",
    Values = { "Snow", "Wind", "Cloudy", "Storm", "Radiant", "Shark Hunt"},
    Value = { "Snow" }, -- default
    Multi = true,
    AllowNone = true,
    Callback = function(option)
        selectedWeathers = option -- ini table berisi semua pilihan
    end
})

-- Toggle untuk purchase weather
local purchasing = false
Tabs.Shop:Toggle({ 
    Title = "Purchase Weather", 
    Value = false,
    Callback = function(state)
        purchasing = state
        if purchasing then
            if #selectedWeathers == 0 then
                purchasing = false
                return
            end

            task.spawn(function()
                while purchasing do
                    for _, weather in ipairs(selectedWeathers) do
                        PurchaseWeather:InvokeServer(weather)
                        task.wait(0.3)
                        if not purchasing then break end
                    end
                    task.wait(0.5) -- jeda sebelum loop ulang
                end
            end)
        end
    end
})

Tabs.Shop:Section({ Title = "Boat" })

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local PurchaseBoat = ReplicatedStorage
    :WaitForChild("Packages")
    :WaitForChild("_Index")
    :WaitForChild("sleitnick_net@0.2.0")
    :WaitForChild("net")
    :WaitForChild("RF/PurchaseBoat")

-- Daftar Boat (tinggal tambahin di sini kalau ada boat baru)
local BoatList = {
    ["Small Boat $300"] = 1,
    ["Kayak $1100"] = 2,
    ["Jetski $7500"] = 3,
    ["Highfield Boat $25000"] = 4,
    ["Speed Boat $70000"] = 5,
    ["Fishing Boat $180000"] = 6,
    ["Mini Yacht $1200000"] = 14,
    ["Mini Hoverboat $195 Robux"] = 15,
    ["Hyper Boat $999 Robux"] = 7,
}

-- Convert keys BoatList jadi table untuk dropdown
local BoatNames = {}
for name,_ in pairs(BoatList) do
    table.insert(BoatNames, name)
end
table.sort(BoatNames) -- biar rapi alfabet

-- Default pilihan
local selectedBoatID = BoatList[BoatNames[1]]

-- Dropdown Pilih Boat
Tabs.Shop:Dropdown({ 
    Title = "Select Boat",
    Values = BoatNames,
    Value = BoatNames[1],
    Multi = false,
    AllowNone = false,
    Callback = function(option) 
        selectedBoatID = BoatList[option]
        print("Selected Boat:", option, "ID:", selectedBoatID)
    end
})

    local HighlightButton
    HighlightButton = Tabs.Shop:Button({ 
    Title = "Purchase Boat",
    Justify = "Center", -- align items in the center (Center or Between or Left or Right)
    IconAlign = "Left", -- Left or Right of the text
    Icon = "", -- removing icon
    Callback = function() 
    HighlightButton:Highlight()
        if not selectedBoatID then return end
        local args = {selectedBoatID}
        local success, result = pcall(function()
            return PurchaseBoat:InvokeServer(unpack(args))
        end)

        if success then
            WindUI:Notify({
                Title = "Boat Purchased",
                Content = "You bought: " .. tostring(result),
                Duration = 2,
            })
        else
            WindUI:Notify({
                Title = "Purchase Failed",
                Content = tostring(result),
                Duration = 2,
            })
        end
    end
})

Tabs.Shop:Section({ Title = "Traveling Merchant" })

Tabs.Shop:Toggle({
    Title = "Auto Purchase All Merchant",
    Value = false,
    Callback = function(state)
        getgenv().AutoClaimEvent = state

        task.spawn(function()
            while getgenv().AutoClaimEvent do
                for i = 1, 7 do
                    local args = {i}
                    local success, err = pcall(function()
                        game:GetService("ReplicatedStorage")
                            :WaitForChild("Packages")
                            :WaitForChild("_Index")
                            :WaitForChild("sleitnick_net@0.2.0")
                            :WaitForChild("net")
                            :WaitForChild("RF/PurchaseMarketItem")
                            :InvokeServer(unpack(args))
                    end)
                    if not success then
                        warn("Auto Claim Error (ID " .. i .. "): " .. tostring(err))
                    end
                    task.wait(0.5)
                end
                task.wait(5)
            end
        end)
    end
})

Tabs.Boat:Section({ Title = "Boat" })

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local SpawnBoat = ReplicatedStorage
    :WaitForChild("Packages")
    :WaitForChild("_Index")
    :WaitForChild("sleitnick_net@0.2.0")
    :WaitForChild("net")
    :WaitForChild("RF/SpawnBoat")

-- Daftar Boat
local BoatList = {
    ["Small Boat"] = 1,
    ["Kayak"] = 2,
    ["Jetski"] = 3,
    ["Highfield Boat"] = 4,
    ["Speed Boat"] = 5,
    ["Fishing Boat"] = 6,
    ["Mini Yacht"] = 14,
    ["Mini Hoverboat"] = 15,
    ["Hyper Boat"] = 7,
    ["Dinky Fishing Boat"] = 20,
    ["Aura Boat"] = 17,
    ["Burger Boat"] = 18,
    ["Mega Hovercraft"] = 19,
    ["Froen Boat"] = 11,
    ["Cruiser Boat"] = 13,
    ["Rubber Ducky"] = 16,
}

-- Convert ke nama boat untuk dropdown
local BoatNames = {}
for name,_ in pairs(BoatList) do
    table.insert(BoatNames, name)
end
table.sort(BoatNames)

-- Default pilihan
local selectedBoatID = BoatList[BoatNames[1]]

-- Dropdown Pilih Boat
Tabs.Boat:Dropdown({ 
    Title = "Select Boat to Spawn",
    Values = BoatNames,
    Value = BoatNames[1],
    Multi = false,
    AllowNone = false,
    Callback = function(option) 
        selectedBoatID = BoatList[option]
        print("Selected Boat to Spawn:", option, "ID:", selectedBoatID)
    end
})

-- Button Spawn Boat
Tabs.Boat:Button({ 
    Title = "Spawn Boat",
    Callback = function() 
        local args = {selectedBoatID}
        local success, result = pcall(function()
            return SpawnBoat:InvokeServer(unpack(args))
        end)

        if success then
            WindUI:Notify({
                Title = "Boat Spawned",
                Content = "Spawned Boat: " .. tostring(result),
                Duration = 2,
            })
        else
            WindUI:Notify({
                Title = "Spawn Failed",
                Content = tostring(result),
                Duration = 2,
            })
        end
    end
})

local customSpeed = 1000 -- default value

-- Input untuk set kecepatan
Tabs.Boat:Input({
    Title = "Set Boat Speed",
    Value = "1000",
    InputIcon = "gauge",
    Placeholder = "Enter speed value...",
    Callback = function(input)
        local number = tonumber(input)
        if number then
            customSpeed = number
        end
    end
})

-- Toggle untuk aktifkan Super Speed
Tabs.Boat:Toggle({
    Title = "Super Speed Boats",
    Icon = "chevrons-up",
    Type = "Checkbox",
    Default = false,
    Callback = function(state)
        local ReplicatedStorage = game:GetService("ReplicatedStorage")
        local BoatsModule = require(ReplicatedStorage.Shared.BoatsHandlingData)

        -- Simpan speed asli untuk restore
        if not BoatsModule._OriginalSpeed then
            BoatsModule._OriginalSpeed = {}
            for boatName, boatData in pairs(BoatsModule) do
                if type(boatData) == "table" and boatData.Speed then
                    BoatsModule._OriginalSpeed[boatName] = boatData.Speed
                end
            end
        end

        if state then
            -- Aktif: set semua speed ke customSpeed
            for _, boatData in pairs(BoatsModule) do
                if type(boatData) == "table" and boatData.Speed then
                    boatData.Speed = customSpeed
                end
            end
        else
            -- Nonaktif: kembalikan kecepatan asli
            for boatName, boatData in pairs(BoatsModule) do
                if type(boatData) == "table" and boatData.Speed and BoatsModule._OriginalSpeed[boatName] then
                    boatData.Speed = BoatsModule._OriginalSpeed[boatName]
                end
            end
        end
    end
})

Tabs.Player:Section({ Title = "LocalPlayer" })

Tabs.Player:Toggle({
    Title = "Bypass Oxygen Tank",
    Desc = "This toggle will equip an oxygen tank even though you don't have an oxygen tank. This is free. No coins needed",
    Default = false,
    Callback = function(state)
        local RepStorage = game:GetService("ReplicatedStorage")
        local Net = RepStorage:WaitForChild("Packages")
                        :WaitForChild("_Index")
                        :WaitForChild("sleitnick_net@0.2.0")
                        :WaitForChild("net")
        
        if state then
            -- Equip
            local args = {105} -- ID tank
            Net:WaitForChild("RF/EquipOxygenTank"):InvokeServer(unpack(args))
        else
            -- Unequip
            Net:WaitForChild("RF/UnequipOxygenTank"):InvokeServer()
        end
    end
})

Tabs.Player:Toggle({
    Title = "Bypass Radar",
    Value = false,
    Callback = function(state)
        -- Update nilai di Window
        Window.AlwayShowTab = state

        -- Panggil RemoteFunction untuk UpdateFishingRadar
        local args = { state }  -- true jika toggle ON, false jika OFF
        local remoteFunc = game:GetService("ReplicatedStorage")
            :WaitForChild("Packages")
            :WaitForChild("_Index")
            :WaitForChild("sleitnick_net@0.2.0")
            :WaitForChild("net")
            :WaitForChild("RF/UpdateFishingRadar")
        remoteFunc:InvokeServer(unpack(args))
    end
})

-- Simpan setting lighting & particle untuk dikembalikan saat toggle mati
local originalLightingSettings = {
    GlobalShadows = game.Lighting.GlobalShadows,
    Brightness = game.Lighting.Brightness,
    FogEnd = game.Lighting.FogEnd,
    ClockTime = game.Lighting.ClockTime
}

local originalParticles = {}
for _, v in pairs(workspace:GetDescendants()) do
    if v:IsA("ParticleEmitter") or v:IsA("Trail") or v:IsA("Smoke") then
        originalParticles[v] = v.Enabled
    end
end

-- WindUI Toggle
Tabs.Player:Toggle({ 
    Title = "Black Screen",
    Value = false,
    Callback = function(state)
        local player = game.Players.LocalPlayer
        local playerGui = player:WaitForChild("PlayerGui")
        
        -- Cari ScreenGui DarkScreenGUI
        local darkGui = playerGui:FindFirstChild("DarkScreenGUI")
        
        if state then
            -- Aktifkan Dark Screen
            if not darkGui then
                darkGui = Instance.new("ScreenGui")
                darkGui.Name = "DarkScreenGUI"
                darkGui.ResetOnSpawn = false
                darkGui.IgnoreGuiInset = true
                darkGui.Parent = playerGui

                local darkFrame = Instance.new("Frame")
                darkFrame.Name = "DarkFrame"
                darkFrame.Size = UDim2.new(1, 0, 1, 0)
                darkFrame.Position = UDim2.new(0, 0, 0, 0)
                darkFrame.BackgroundColor3 = Color3.new(0, 0, 0)
                darkFrame.BackgroundTransparency = 0
                darkFrame.BorderSizePixel = 0
                darkFrame.Parent = darkGui
            end

            -- Matikan efek lighting & particle untuk hemat GPU/CPU
            local lighting = game:GetService("Lighting")
            lighting.GlobalShadows = false
            lighting.Brightness = 0
            lighting.FogEnd = 100000
            lighting.ClockTime = 12

            for particle, _ in pairs(originalParticles) do
                particle.Enabled = false
            end

        else
            -- Matikan Dark Screen
            if darkGui then
                darkGui:Destroy()
            end

            -- Kembalikan setting lighting
            local lighting = game:GetService("Lighting")
            lighting.GlobalShadows = originalLightingSettings.GlobalShadows
            lighting.Brightness = originalLightingSettings.Brightness
            lighting.FogEnd = originalLightingSettings.FogEnd
            lighting.ClockTime = originalLightingSettings.ClockTime

            -- Kembalikan particle
            for particle, enabled in pairs(originalParticles) do
                if particle.Parent then
                    particle.Enabled = enabled
                end
            end
        end

    end
})

Tabs.Player:Button({ 
    Title = "Boost FPS",  -- Nama tombol
    Callback = function() 
        WindUI:Notify({
            Title = "Boost FPS",
            Content = "On!",
            Duration = 5,
        })

        -- Script Boost FPS
        local Lighting = game:GetService("Lighting")
        local Workspace = game:GetService("Workspace")
        local Players = game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer

        -- Optimasi grafis
        Lighting.GlobalShadows = false
        Lighting.FogEnd = 9e9
        Lighting.Brightness = 1
        Lighting.ExposureCompensation = 0
        Lighting.OutdoorAmbient = Color3.fromRGB(128,128,128)
        Lighting.ShadowSoftness = 0

        pcall(function()
            for _, obj in pairs(Workspace:GetDescendants()) do
                if obj:IsA("ParticleEmitter") or obj:IsA("Trail") or obj:IsA("Explosion") then
                    obj.Enabled = false
                elseif obj:IsA("Decal") or obj:IsA("Texture") then
                    obj.Transparency = 1
                end
            end
        end)
    end
})

Tabs.Player:Button({
    Title = "Reduce Lag", -- Nama tombol
    Callback = function()
        -- Notifikasi
        WindUI:Notify({
            Title = "Reduce Lag",
            Content = "On!",
            Duration = 5,
        })

        -- Script Reduce Lag
        local Players = game:GetService("Players")
        local Workspace = game:GetService("Workspace")
        local Lighting = game:GetService("Lighting")
        local LocalPlayer = Players.LocalPlayer

        -- Optimasi Lighting
        Lighting.GlobalShadows = false
        Lighting.FogEnd = 9e9
        Lighting.Brightness = 1
        Lighting.OutdoorAmbient = Color3.fromRGB(128,128,128)
        Lighting.ExposureCompensation = 0
        Lighting.ShadowSoftness = 0

        -- Hapus efek particle dan decal
        for _, obj in pairs(Workspace:GetDescendants()) do
            if obj:IsA("ParticleEmitter") or obj:IsA("Trail") or obj:IsA("Explosion") then
                obj.Enabled = false
            elseif obj:IsA("Decal") or obj:IsA("Texture") then
                obj.Transparency = 1
            end
        end

        -- Optimasi GUI player
        for _, gui in pairs(LocalPlayer:WaitForChild("PlayerGui"):GetDescendants()) do
            if gui:IsA("TextLabel") or gui:IsA("TextButton") then
                gui.TextScaled = false
            elseif gui:IsA("ImageLabel") or gui:IsA("ImageButton") then
                gui.ImageTransparency = 0.5
            end
        end

    end
})

local RunService = game:GetService("RunService")
local volcanoFolder = workspace.Zones["Kohana Volcano"]

-- Variable toggle
local AutoRemove = false
local connection

    local HighlightButton
    HighlightButton = Tabs.Player:Button({
    Title = "Anti Lava",
    Justify = "Center", -- align items in the center (Center or Between or Left or Right)
    IconAlign = "Left", -- Left or Right of the text
    Icon = "shield-ban",
    Callback = function()
      HighlightButton:Highlight()
        AutoRemove = not AutoRemove -- toggle on/off

        if AutoRemove then
            -- Start loop
            connection = RunService.Heartbeat:Connect(function()
                for _, obj in ipairs(volcanoFolder:GetDescendants()) do
                    if obj:IsA("TouchTransmitter") then
                        obj:Destroy()
                    end
                end
            end)

            WindUI:Notify({
                Title = "Nexa Notify",
                Content = "Anti Lava is ON",
                Duration = 5,
            })
        else
            -- Stop loop
            if connection then
                connection:Disconnect()
                connection = nil
            end

            WindUI:Notify({
                Title = "Nexa Notify",
                Content = "Anti Lava is OFF",
                Duration = 5,
            })
        end
    end
})

Tabs.Teleport:Section({ Title = "Island" })

-- Daftar lokasi teleport (isi CFrame sesuai island)
local islands = {
    ["Kohana"] = CFrame.new(-642.243561, 16.0354481, 624.918884, 0.999580681, 0, -0.0289562326, 0, 1, 0, 0.0289562326, 0, 0.999580681),
    ["Winter Fest"] = CFrame.new(1687.93079, 6.8625145, 3309.67725, 0.96799022, -3.6394315e-08, -0.250987828, 1.06909646e-08, 1, -1.0377223e-07, 0.250987828, 9.77672059e-08, 0.96799022),
    ["Lost Isle"] = CFrame.new(-3660.07031, 26.1918774, -933.131897, -0.77232331, -7.22959044e-08, -0.635229647, -1.90984206e-08, 1, -9.05904614e-08, 0.635229647, -5.7833244e-08, -0.77232331),
    ["Isoteric Island"] = CFrame.new(2029.47913, 27.3972206, 1393.52319, 0.438848287, -3.30229497e-08, -0.89856118, 8.09404801e-08, 1, 2.55982613e-09, 0.89856118, -7.34489944e-08, 0.438848287),
    ["Crater Island"] = CFrame.new(973.268372, 7.36203814, 4879.09277, 0.99999994, -1.67766032e-08, -0.000279307278, 1.67553038e-08, 1, -7.62482344e-08, 0.000279307278, 7.62435519e-08, 0.99999994),
    ["Coral Reefs"] = CFrame.new(-3134.98511, 20.9564934, 2167.80566, 0.610140502, 5.54546098e-08, -0.792293251, -1.07331415e-08, 1, 6.17270004e-08, 0.792293251, -2.91583468e-08, 0.610140502),
    ["Kohana Volcano"] = CFrame.new(-525.122925, 24.0000591, 187.470749, 0.702778041, -1.4945584e-08, 0.711409211, 1.59372149e-09, 1, 1.18378477e-08, -0.711409211, -1.17821113e-08, 0.702778041),
    ["Fisherman Island"] = CFrame.new(33.5687256, 17.0335217, 2834.95557, 0.999833524, -8.21432367e-10, 0.0182459373, 2.40968401e-09, 1, 8.70248726e-08, -0.0182459373, 8.7054351e-08, 0.999833524),
    ["Esoteric Depths"] = CFrame.new(3152.74707, -1302.72986, 1438.05444, 0.442518562, -2.42594727e-08, -0.896759331, -8.6126515e-09, 1, 1.33023953e-08, 0.896759331, -2.15753335e-08, 0.442518562),
    ["Tropical Grove"] = CFrame.new(-2046.1554, 6.26801682, 3660.56006, -0.739083588, 1.74285066e-08, 0.673613727, -5.79817758e-08, 1, -8.94902854e-08, -0.673613727, -1.05198126e-07, -0.739083588),
    ["Treasure Room"] = CFrame.new(-3599.53491, -266.57373, -1566.98657),
    ["Weather Machine"] = CFrame.new(-1525.72632, 6.49999952, 1892.23645, 0.0615941137, 6.608282509e-10, -0.998101294, -6.8356556e-08, 1, 3.55628549e-09, 0.998101294, 6.84458072e-08, 0.0615941137),
    ["Sisyphus Statue"] = CFrame.new(-3692.22021, -135.574417, -1026.96167, -0.928567886, 9.83784361e-08, 0.371162564, 1.22746741e-07, 1, 4.20307664e-08, -0.371162564, 8.45874197e-08, -0.928567886),
    ["Ancient Jungle"] = CFrame.new(1275.54553, 7.85804176, -193.749756, 0.924119413, 5.65956171e-08, -0.382103801, -3.36512187e-08, 1, 6.67302302e-08, 0.382103801, -4.88084417e-08, 0.924119413),
    ["Underground Cellar 1"] = CFrame.new(1954.18994, -41.7413597, -577.574768, -0.817980289, 0.573605001, 0.0434255376, 0.572797239, 0.81913203, -0.0304316022, -0.0530269668, -1.84206292e-05, -0.998593211),
    ["Underground Cellar 2"] = CFrame.new(2120.27417, -93.1985779, -701.552185, -0.998591185, 0, 0.0530693457, 0, 1, 0, -0.0530693457, 0, -0.998591185),
    ["Second Enchant Altar"] = CFrame.new(1478.29846, 126.044891, -613.519653, -0.117893577, 0, 0.993026376, 0, 1, 0, -0.993026376, 0, -0.117893577),
    ["Mysterious Door"] = CFrame.new(1899.19629, 13.3589745, -577.593811, -0.0531117916, 0, -0.998588562, 0, 1, 0, 0.998588562, 0, -0.0531117916),
    ["Temple Lever 1"] = CFrame.new(1485.66541, 5.41373634, -861.165161, -5.01871109e-05, 0.988927424, 0.148400292, -1, -5.01871109e-05, -3.74019146e-06, 3.74019146e-06, -0.148400292, 0.988927364),
    ["Temple Lever 2"] = CFrame.new(898.490479, 5.41373587, -361.212708, 9.11951065e-06, 0.0998446345, -0.995003104, -1, 9.11951065e-06, -8.2552433e-06, 8.2552433e-06, 0.995003104, 0.0998445749),
    ["Temple Lever 3"] = CFrame.new(1419.39148, 28.1637344, 79.5802917, 3.55243683e-05, -0.332731277, -0.943021655, -1, -3.55243683e-05, -2.51233578e-05, -2.51233578e-05, 0.943021655, -0.332731247),
    ["Temple Lever 4"] = CFrame.new(1818.72156, 5.41373634, -285.160828, -1.15633011e-05, -0.192806393, 0.981236815, -1, 1.15633011e-05, -9.53674316e-06, -9.53674316e-06, -0.981236815, -0.192806482),
    ["Temple"] = CFrame.new(1478.09546, 0.0774269104, -612.817993, 0.993017375, 0, 0.117968373, 0, 1, 0, -0.117968373, 0, 0.993017375),
}

-- Ambil semua nama Island
local islandNames = {}
for name, _ in pairs(islands) do
    table.insert(islandNames, name)
end
table.sort(islandNames, function(a, b) return a:lower() < b:lower() end)

-- Default Island
local selectedIsland = islandNames[1] or "Kohana"

-- Dropdown pilih Island
Tabs.Teleport:Dropdown({
    Title = "Select Island",
    Values = islandNames,
    Default = selectedIsland,
    Callback = function(value)
        selectedIsland = value
    end
})

-- Tombol Teleport Now
HighlightButton = Tabs.Teleport:Button({
    Title = "Teleport Now",
    Justify = "Center", -- align items in the center (Center or Between or Left or Right)
    IconAlign = "Left", -- Left or Right of the text
    icon = "map-pin",
    Callback = function()
            HighlightButton:Highlight()
        local player = game.Players.LocalPlayer
        local char = player.Character or player.CharacterAdded:Wait()
        local hrp = char:WaitForChild("HumanoidRootPart")

        local target = islands[selectedIsland]
        if target then
            char:PivotTo(target)
        end
    end
})

Tabs.Server:Section({ Title = "Fish" })

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local HttpService = game:GetService("HttpService")

local LocalPlayer = Players.LocalPlayer
local Notification = LocalPlayer:WaitForChild("PlayerGui"):WaitForChild("Small Notification")

-- Universal request (bypass HttpService block)
local Request = (syn and syn.request) or (http_request) or (fluxus and fluxus.request) or (krnl and request)

-- Variabel untuk simpan Webhook URL
local WebhookURL = ""
local WebhookActive = false

-- Variabel filter tier dari dropdown
local SelectedTiers = {}

-- Link Discord
local DiscordLink = "discord.gg/ECxQFc97F5"

-- Mapping Tier → Nama Rarity
local TierMap = {
    [1] = "Common",
    [2] = "Uncommon",
    [3] = "Rare",
    [4] = "Epic",
    [5] = "Legendary",
    [6] = "Mythic",
    [7] = "SECRET"
}

-- Counter berapa kali dapat ikan tiap Tier
local FishCounter = {
    Common = 0,
    Uncommon = 0,
    Rare = 0,
    Epic = 0,
    Legendary = 0,
    Mythic = 0,
    SECRET = 0
}

-- Fungsi format angka k/m/b
local function FormatNumber(num)
    num = tonumber(num) or 0
    if num >= 1e9 then
        return string.format("%.2fb", num / 1e9)
    elseif num >= 1e6 then
        return string.format("%.2fm", num / 1e6)
    elseif num >= 1e3 then
        return string.format("%.2fk", num / 1e3)
    else
        return tostring(num)
    end
end

-- Fungsi format chance ke persen
local function FormatChance(chance)
    chance = tonumber(chance) or 0
    return string.format("%.2f%%", chance * 100)
end

-- Fungsi kirim webhook embed + plain message
local function SendEmbed(data, plainMessage)
    if WebhookURL ~= "" and Request then
        local payload = {
            ["content"] = plainMessage or "Join Discord Nexa Hub discord.gg/ECxQFc97F5",
            ["embeds"] = data.embeds
        }

        Request({
            Url = WebhookURL,
            Method = "POST",
            Headers = {["Content-Type"] = "application/json"},
            Body = HttpService:JSONEncode(payload)
        })
    end
end

-- Input Webhook URL
Tabs.Server:Input({
    Title = "Webhook URL",
    Value = "",
    Placeholder = "Url",
    Callback = function(input)
        WebhookURL = input
        print("Webhook set to: " .. WebhookURL)
    end
})

-- Toggle kirim pesan
Tabs.Server:Toggle({
    Title = "Enable Webhook",
    Value = false,
    Callback = function(state)
        WebhookActive = state
        if state then
            print("Webhook activated ✅")
            SendEmbed({
                ["embeds"] = {{
                    ["author"] = {["name"] = "Fishing System"},
                    ["title"] = "Webhook Aktif",
                    ["description"] = "✅ Webhook berhasil diaktifkan dan siap mengirim data.",
                    ["color"] = 5763719,
                    ["timestamp"] = DateTime.now():ToIsoDate()
                }}
            }, "Join our Discord: " .. DiscordLink)
        else
            print("Webhook deactivated ❌")
        end
    end
})

-- Dropdown filter tier
Tabs.Server:Dropdown({
    Title = "Select Tier to Send",
    Values = {"All", "Common", "Uncommon", "Rare", "Epic", "Legendary", "Mythic", "SECRET"},
    Value = {},
    Multi = true,
    AllowNone = true,
    Callback = function(option) 
        SelectedTiers = option
        print("Tier filter selected: " .. HttpService:JSONEncode(option))
    end
})

-- Fungsi cari module ikan (fuzzy match)
local function FindFishModule(fishName)
    local Items = ReplicatedStorage:WaitForChild("Items")
    for _, moduleScript in ipairs(Items:GetChildren()) do
        if moduleScript:IsA("ModuleScript") then
            local ok, data = pcall(require, moduleScript)
            if ok and data and data.Data and data.Data.Name then
                local realName = data.Data.Name
                if string.find(string.lower(fishName), string.lower(realName)) then
                    return data
                end
            end
        end
    end
    return nil
end

-- Detect ikan dari GUI
local Container = Notification.Display.Container
local ItemName = Container:WaitForChild("ItemName")
local NewLabel = Notification.Display.NewFrame.Frame:WaitForChild("NewLabel")

ItemName:GetPropertyChangedSignal("Text"):Connect(function()
    if WebhookActive and WebhookURL ~= "" and Request then
        local rawText = ItemName.Text
        if rawText ~= "" then
            -- Pisahkan nama ikan & berat
            local fishName, fishWeight = rawText:match("^(.-)%s*%((.-)%)$")
            fishName = (fishName and fishName:gsub("^%s+", ""):gsub("%s+$", "")) or rawText
            fishWeight = fishWeight or "Unknown"

            -- Cari data ikan
            local fishData = FindFishModule(fishName)

            local tierNum = fishData and fishData.Data.Tier or 0
            local tierName = TierMap[tierNum] or "Unknown"
            local sellPrice = fishData and fishData.SellPrice or "Unknown"
            local chance = fishData and fishData.Probability and fishData.Probability.Chance or 0

            local newLabelText = NewLabel.Text or ""

            -- Ambil Rarity GUI
            local RarityLabel = Container:WaitForChild("Rarity")
            local rarityText = RarityLabel.Text or "Unknown"

            -- Ambil BagSize dari Inventory
            local BagSizeLabel = Players.LocalPlayer.PlayerGui.Inventory.Main.Top.Options.Fish.Label:WaitForChild("BagSize")
            local bagSizeText = BagSizeLabel.Text or "Unknown"

            -- Cek filter tier
            if #SelectedTiers > 0 then
                if not table.find(SelectedTiers, "All") and not table.find(SelectedTiers, tierName) then
                    return -- skip kirim kalau tier tidak sesuai filter
                end
            end

            -- Update counter Tier
            if FishCounter[tierName] ~= nil then
                FishCounter[tierName] = FishCounter[tierName] + 1
            end

            -- Buat field counter semua tier
            local counterFields = {}
            for _, name in ipairs({"Common","Uncommon","Rare","Epic","Legendary","Mythic","SECRET"}) do
                table.insert(counterFields, {
                    ["name"] = "X :  " .. name .. " 🎣",
                    ["value"] = "```" .. tostring(FishCounter[name]) .. "```",
                    ["inline"] = true
                })
            end

            -- Buat embed
            local Data = {
                ["embeds"] = {{
                    ["author"] = {["name"] = "Nexa Fishing Info"},
                    ["title"] = "New Fish Caught!❗",
                    ["color"] = math.random(1000000, 16777215),
                    ["fields"] = {
                        {["name"] = "Fish 🐟", ["value"] = "```" .. fishName .. "```", ["inline"] = true},
                        {["name"] = "KG ⚖️", ["value"] = "```" .. fishWeight .. "```", ["inline"] = true},
                        {["name"] = "Tier 🥇", ["value"] = "```" .. tierName .. "```", ["inline"] = true},
                        {["name"] = "Rarity 🚀", ["value"] = "```" .. rarityText .. "```", ["inline"] = true},
                        {["name"] = "Bag Size 💼", ["value"] = "```" .. bagSizeText .. "```", ["inline"] = true},
                        {["name"] = "Sell Price 🪙", ["value"] = "```" .. FormatNumber(sellPrice) .. "```", ["inline"] = true},
                        {["name"] = "Chance 📈", ["value"] = "```" .. FormatChance(chance) .. "```", ["inline"] = true},
                    },
                    ["footer"] = {["text"] = "Nexa | Fishing Logger • Fish It! 🐟"},
                    ["timestamp"] = DateTime.now():ToIsoDate()
                }}
            }

            -- Tambahin semua counter ke fields
            for _, f in ipairs(counterFields) do
                table.insert(Data.embeds[1].fields, f)
            end

            if newLabelText ~= "" then
                table.insert(Data.embeds[1].fields, {["name"] = "Info", ["value"] = "```" .. newLabelText .. "```", ["inline"] = false})
            end

            -- Kirim webhook + link Discord plain message
            SendEmbed(Data, "Join our Discord: " .. DiscordLink)
        end
    end
end)

Tabs.Server:Section({ Title = "Staff" })

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

-- 🔒 List of Staff UserIds
local staffIds = {
    75974130,
    33372493,
    30944240,
}

-- 🌐 Global Flags
getgenv().StaffDetectionEnabled = false
getgenv().StaffActions = { "Notify" } -- default: Notify

-- ✅ Check if player is staff
local function isStaff(player)
    for _, id in ipairs(staffIds) do
        if player.UserId == id then
            return true
        end
    end
    return false
end

-- ⚠️ Handle detected staff
local function handleStaff(player)
    if not getgenv().StaffDetectionEnabled then return end
    if not isStaff(player) then return end

    for _, action in ipairs(getgenv().StaffActions) do
        if action == "Kick" then
            LocalPlayer:Kick("Staff detected: " .. player.Name)
        elseif action == "Notify" then
            UI:Notify({
                Title = "⚠️ Staff Detected",
                Content = player.Name .. " (UserId: " .. player.UserId .. ") joined!",
                Duration = 6.5
            })
        end
    end
end

-- 🔁 Detect staff on join
Players.PlayerAdded:Connect(function(player)
    handleStaff(player)
end)

-- 🔘 Main Toggle
Tabs.Server:Toggle({
    Title = "Anti Staff",
    Value = true,
    Callback = function(state)
        getgenv().StaffDetectionEnabled = state
        print("Anti Staff Enabled: " .. tostring(state))

        -- Scan current players if enabled
        if state then
            for _, player in ipairs(Players:GetPlayers()) do
                handleStaff(player)
            end
        end
    end
})

-- 🔽 Multi-Select Dropdown for Actions
Tabs.Server:Dropdown({
    Title = "Staff Actions",
    Desc = "Choose actions to execute when staff is detected",
    Values = { "Kick", "Notify" },
    Value = { "Notify" },
    Multi = true,
    AllowNone = false,
    Callback = function(option)
        getgenv().StaffActions = option
        print("Selected staff actions: " .. game:GetService("HttpService"):JSONEncode(option))
    end
})

Tabs.Server:Section({ Title = "Server" })

-- WindUI + Executor-friendly Discord webhook sender (prints removed)
local HttpService = game:GetService("HttpService")

local webhookURL = "https://discord.com/api/webhooks/1421786317322457088/b6Xj6NHry0-wv-zKV8WftRQ9cgAGBZ6gAG1JsI7GfqFv50v1F25QFoSSNEgyXLQTN110" -- <-- ganti di sini

-- helper: kirim request via berbagai executor
local function sendWebhook(payloadTable)
    local body = HttpService:JSONEncode(payloadTable)

    -- syn.request (Synapse)
    if syn and syn.request then
        local ok, res = pcall(function()
            return syn.request({
                Url = webhookURL,
                Method = "POST",
                Headers = {
                    ["Content-Type"] = "application/json"
                },
                Body = body
            })
        end)
        return ok, res
    end

    -- http_request / request (other executors)
    if http_request or request then
        local req = http_request or request
        local ok, res = pcall(function()
            return req({
                Url = webhookURL,
                Method = "POST",
                Headers = {
                    ["Content-Type"] = "application/json"
                },
                Body = body
            })
        end)
        return ok, res
    end

    -- fallback ke HttpService:PostAsync (Studio)
    local ok, res = pcall(function()
        return HttpService:PostAsync(webhookURL, body, Enum.HttpContentType.ApplicationJson)
    end)
    return ok, res
end

-- Contoh payload embed
local function makePayload(username, userId, reportText)
    local gameName = tostring(game.PlaceId)
    pcall(function()
        -- GetProductInfo bisa error di executor; bungkus dengan pcall
        local ms = game:GetService("MarketplaceService")
        local info = ms:GetProductInfo(game.PlaceId)
        if info and info.Name then
            gameName = info.Name
        end
    end)

    return {
        username = "Roblox Bug Reporter",
        embeds = {
            {
                title = "New Bug Report",
                description = reportText,
                fields = {
                    { name = "Player", value = username or "Unknown", inline = true },
                    { name = "UserId", value = tostring(userId or "Unknown"), inline = true },
                    { name = "Game", value = gameName, inline = true }
                },
                footer = { text = "Report Sand Nexa Hub" },
                timestamp = os.date("!%Y-%m-%dT%H:%M:%SZ", os.time())
            }
        }
    }
end

-- WindUI Input
Tabs.Server:Input({ 
    Title = "Report Bug", 
    Value = "",
    Placeholder = "Enter Bug", 
    Callback = function(input)
        -- validasi
        if not input or input:match("^%s*$") then
            warn("Report kosong. Mohon isi laporan bug terlebih dahulu.")
            return
        end

        -- ambil info user (bila dijalankan client/executor)
        local playerName = "ExecutorUser"
        local playerId = "N/A"
        if type(game) == "userdata" and game.Players then
            local localPlayer = game.Players.LocalPlayer
            if localPlayer then
                playerName = localPlayer.Name
                playerId = localPlayer.UserId
            end
        end

        local payload = makePayload(playerName, playerId, input)

        local ok, res = sendWebhook(payload)
        if not ok then
            warn("Gagal mengirim bug report. Response/Error:", res)
        end
        -- sukses: silent (sesuai permintaan, print dihapus)
    end 
})

-- 📦 Services
local Players = game:GetService("Players")
local TeleportService = game:GetService("TeleportService")

-- 👤 Pemain lokal
local LocalPlayer = Players.LocalPlayer

-- 🔘 Tombol WindUI untuk Rejoin
Tabs.Server:Button({
    Title = "Rejoin Server",
    Callback = function()
        local placeId = game.PlaceId
        local jobId = game.JobId
        TeleportService:TeleportToPlaceInstance(placeId, jobId, LocalPlayer)
    end
})

-- 📦 Roblox Services
local TeleportService = game:GetService("TeleportService")
local Players = game:GetService("Players")
local HttpService = game:GetService("HttpService")

local LocalPlayer = Players.LocalPlayer

-- 🌐 Server Hop dengan WindUI
Tabs.Server:Button({
    Title = "Server Hop",
    Callback = function()
        local success, response = pcall(function()
            local url = ("https://games.roblox.com/v1/games/%d/servers/Public?sortOrder=Asc&limit=100"):format(game.PlaceId)
            return game:HttpGet(url)
        end)

        if not success then
            warn("Gagal ambil data server.")
            return
        end

        local servers = HttpService:JSONDecode(response)
        for _, server in ipairs(servers.data) do
            if server.playing < server.maxPlayers and server.id ~= game.JobId then
                TeleportService:TeleportToPlaceInstance(game.PlaceId, server.id, LocalPlayer)
                return
            end
        end

        warn("Tidak ada server lain yang tersedia.")
    end
})

Tabs.Server:Button({
    Title = "Copy Job ID",
    Desc = "Copy the server JobId to the clipboard",
    Callback = function()
        setclipboard(game.JobId)
    end
})

local TeleportService = game:GetService("TeleportService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local PlaceId = game.PlaceId

local targetJobId = ""

Tabs.Server:Input({
    Title = "Enter Job ID",
    PlaceholderText = "Enter the JobId here...",
    Default = "",
    Callback = function(text)
        targetJobId = text
    end
})

Tabs.Server:Button({
    Title = "Teleport to Job ID",
    Desc = "Teleport to the server using the provided JobId",
    Callback = function()
        if targetJobId ~= "" then
            TeleportService:TeleportToPlaceInstance(PlaceId, targetJobId, LocalPlayer)
        end
    end
})

Tabs.Server:Keybind({
    Title = "Keybind Example",
    Desc = "Keybind to open ui",
    Value = "G",
    Callback = function(v)
        Window:SetToggleKey(Enum.KeyCode[v])
    end
})


-------------------------------------------------------
-- TOGGLE BUTTON (PUTIH AGAK TRANSPARAN)
-------------------------------------------------------
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = game.CoreGui
ScreenGui.Name = "WindUIButton"

-- 🔘 ImageButton utama
local ImgBtn = Instance.new("ImageButton")
ImgBtn.Parent = ScreenGui
ImgBtn.Size = UDim2.new(0, 60, 0, 60)
ImgBtn.Position = UDim2.new(0, 100, 1, -300)
ImgBtn.BackgroundColor3 = Color3.fromRGB(255, 255, 255) -- warna putih
ImgBtn.BackgroundTransparency = 0.3 -- agak transparan
ImgBtn.Image = "rbxassetid://131269662643486" -- icon planet
ImgBtn.ImageTransparency = 0.15 -- icon sedikit transparan juga
ImgBtn.ImageColor3 = Color3.fromRGB(255, 255, 255)
ImgBtn.AutoButtonColor = false

-- 🔲 Sudut membulat
local UICorner = Instance.new("UICorner")
UICorner.CornerRadius = UDim.new(1, 0) -- full bulat
UICorner.Parent = ImgBtn

-- ✏️ Garis pinggir halus
local UIStroke = Instance.new("UIStroke")
UIStroke.Color = Color3.fromRGB(200, 200, 200)
UIStroke.Thickness = 2
UIStroke.Transparency = 0.4 -- agak transparan
UIStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
UIStroke.Parent = ImgBtn

local isOpen = false

-- 🔄 Animasi klik
local function playClickAnim()
	local shrink = TweenService:Create(ImgBtn, TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
		Size = UDim2.new(0, 50, 0, 50),
		BackgroundTransparency = 0.45
	})
	local grow = TweenService:Create(ImgBtn, TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
		Size = UDim2.new(0, 60, 0, 60),
		BackgroundTransparency = 0.3
	})
	shrink:Play()
	shrink.Completed:Wait()
	grow:Play()
end

-- 🟢 Buka/tutup GUI
ImgBtn.MouseButton1Click:Connect(function()
	playClickAnim()
	isOpen = not isOpen
	if isOpen then
		Window:Open()
	else
		Window:Close()
	end
end)

-- 🖱️ Drag agar bisa dipindah
local dragging, dragInput, dragStart, startPos

local function update(input)
	local delta = input.Position - dragStart
	ImgBtn.Position = UDim2.new(
		startPos.X.Scale, startPos.X.Offset + delta.X,
		startPos.Y.Scale, startPos.Y.Offset + delta.Y
	)
end

ImgBtn.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		dragging = true
		dragStart = input.Position
		startPos = ImgBtn.Position
		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then dragging = false end
		end)
	end
end)

ImgBtn.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
		dragInput = input
	end
end)

UserInputService.InputChanged:Connect(function(input)
	if input == dragInput and dragging then
		update(input)
	end
end)
